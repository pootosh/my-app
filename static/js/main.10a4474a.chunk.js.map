{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","react_default","a","createElement","className","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","style","aria-labelledby","data-bs-parent","Navbar","Fragment","concat","react_router_dom","to","title","aria-label","aria-current","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","rows","value","onChange","event","target","placeholder","onClickCapture","copyText","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","showAlert","disabled","length","newText","toLowerCase","toUpperCase","replaceAll","trim","split","defaultProps","Alert","height","alert","msg","App","setMode","_useState3","_useState4","setAlert","mesage","setTimeout","body","components_Alert","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.10a4474a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    let myStyle = {\r\n        color: props.mode==='dark' ? 'white' : 'black',\r\n        backgroundColor: props.mode==='dark' ? 'darkgray' : 'white'\r\n    }\r\n  return (\r\n    <div className='container'>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\r\n            style={myStyle}\r\n            >\r\n                Accordion Item #1\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n                Accordion Item #2\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n                Accordion Item #3\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n        <div className=\"container-fluid\" >\r\n          <Link className=\"navbar-brand\" to=\"/\" >{props.title}</Link>\r\n          {/* <a className=\"navbar-brand\" href=\"#\" >{props.title}</a> */}\r\n\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li>\r\n              \r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n\r\n            <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`} >\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\"  aria-checked id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title : PropTypes.string.isRequired}\r\nNavbar.defaultProps = {title : \"Aditya's App\"}","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm\r\n(props) {\r\n    const [text, setText] = useState('');\r\n    \r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        props.showAlert(\"Converted to Upper Case!\", \"success\");\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        props.showAlert(\"Converted to Lower Case!\", \"success\");\r\n        setText(newText);\r\n    }\r\n\r\n    const handleCopyClick = () => {\r\n        let copyText = document.getElementById(\"textBox\");\r\n        copyText.select();\r\n        navigator.clipboard.writeText(copyText.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Text copied!\", \"success\");\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className={`mb-3 container text-${props.mode==='light'? 'secondary': 'light'}`}>\r\n            <label htmlFor=\"myBox\" className=\"form-label\" ><b>{props.title}</b></label>\r\n            <textarea className=\"form-control\" \r\n                id=\"textBox\" \r\n                rows=\"3\" value={text} \r\n                onChange={handleOnChange}\r\n                placeholder=\"Enter something\"\r\n                style={{backgroundColor: props.mode===\"light\"?\"white\":\"darkgray\"}}\r\n                >\r\n            </textarea>\r\n            \r\n            <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                <button type=\"button\" className=\"btn btn-dark my-4\" onClickCapture={handleCopyClick} disabled={text.length===0}>Copy Text</button>\r\n                <button type=\"button\" className=\"btn btn-dark my-4\" onClickCapture={handleLowClick} disabled={text.length===0}>Lower Case</button>\r\n                <button type=\"button\" className=\"btn btn-dark my-4\" onClickCapture={handleUpClick} disabled={text.length===0}>Upper Case</button>\r\n            </div>\r\n        </div>\r\n        \r\n        <div className={`container text-${props.mode==='light'? 'secondary': 'light'}`}>\r\n            <h4><strong>Your text summary</strong></h4>\r\n            <hr />\r\n            <p>Number of characters <b>{text.length}</b>, number of words <b>{text.length===0?0:text.replaceAll(/\\s{2,}/g, ' ').trim().split(\" \").length}</b></p>\r\n            <br />\r\n            <h4><strong>Preview</strong></h4>\r\n            <hr />\r\n            <p>{text}</p>\r\n            <br />\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n  return (\r\n    <div style={{height: '70px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" >\r\n        {props.alert.msg}\r\n    </div>}\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Routes, Route  } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      showAlert('Dark mode Activated', 'success');\n      document.body.style.backgroundColor = 'black';\n    }\n    else{\n      setMode('light');\n      showAlert('Light mode Ativated', 'success');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n\n  const showAlert = (mesage, type) =>{\n    setAlert({\n      msg:mesage,\n      type:type\n    });\n\n    setTimeout(() => setAlert(null), 1500)\n  }\n\n  return (\n    \n    <>\n      {/* <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <TextForm title=\"Enter text analyze\" mode={mode} showAlert={showAlert}/> */}\n    \n    <Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n    <Routes>\n      <Route exact path=\"/\" element={<TextForm title=\"Enter text analyze\" mode={mode} showAlert={showAlert}/>} />\n      <Route exact path=\"/about\" element={<About mode = {mode}/>} />\n        \n      \n    </Routes>\n    </Router>\n      \n      \n      \n      \n      \n      \n      \n    </>\n     \n      \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}