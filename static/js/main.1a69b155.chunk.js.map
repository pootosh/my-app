{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","rows","value","onChange","event","target","placeholder","style","backgroundColor","onClickCapture","newText","toUpperCase","showAlert","length","replaceAll","trim","split","defaultProps","Alert","alert","word","lower","toLowerCase","charAt","slice","Capitalise","msg","App","setMode","_useState3","_useState4","setAlert","mesage","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1a69b155.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n        <div className=\"container-fluid\" >\r\n          {/* <Link className=\"navbar-brand\" to=\"/\" >{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\" >{props.title}</a>\r\n\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li> */}\r\n              \r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n\r\n            <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`} >\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\"  aria-checked id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title : PropTypes.string.isRequired}\r\nNavbar.defaultProps = {title : \"Aditya's App\"}","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm\r\n(props) {\r\n    const [text, setText] = useState('');\r\n    \r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        props.showAlert(\"Submitted\", \"success\");\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        \r\n        setText(event.target.value);\r\n        \r\n        \r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className={`mb-3 container mt-5  text-${props.mode==='light'? 'secondary': 'light'}`}>\r\n            <label htmlFor=\"myBox\" className=\"form-label\" ><b>{props.title}</b></label>\r\n            <textarea className=\"form-control\" \r\n                id=\"exampleFormControlTextarea1\" \r\n                rows=\"3\" value={text} \r\n                onChange={handleOnChange}\r\n                placeholder=\"Enter something\"\r\n                style={{backgroundColor: props.mode===\"light\"?\"white\":\"darkgray\"}}\r\n                >\r\n            </textarea>\r\n            <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                <button type=\"button\" className=\"btn btn-dark my-4\" onClickCapture={handleUpClick}>Submit</button>\r\n            </div>\r\n        </div>\r\n        \r\n        <div className={`container text-${props.mode==='light'? 'secondary': 'light'}`}>\r\n            <h4>Your text summary</h4>\r\n            <p>Number of characters <b>{text.length}</b>, number of words <b>{text.length===0?0:text.replaceAll(/\\s{2,}/g, ' ').trim().split(\" \").length}</b></p>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const Capitalise = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{Capitalise(props.alert.type)}!</strong>&nbsp;{props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n\n// import { BrowserRouter as Router } from \"react-router-dom\";\n// import { Routes, Route  } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      showAlert('Dark mode Ativated', 'success');\n      document.body.style.backgroundColor = 'black';\n    }\n    else{\n      setMode('light');\n      showAlert('Light mode Ativated', 'success');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n\n  const showAlert = (mesage, type) =>{\n    setAlert({\n      msg:mesage,\n      type:type\n    });\n\n    setTimeout(() => setAlert(null), 1500)\n  }\n\n  return (\n    \n    <>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <TextForm title=\"Enter text analyze\" mode={mode} showAlert={showAlert}/>\n    \n    {/* <Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n    <Routes>\n      <Route exact path=\"/\" element={<TextForm title=\"Enter text analyze\" mode={mode} showAlert={showAlert}/>} />\n      <Route exact path=\"/about\" element={<About />} />\n        \n      \n    </Routes>\n    </Router> */}\n      \n      \n      \n      \n      \n      \n      \n    </>\n     \n      \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}